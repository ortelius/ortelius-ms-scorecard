name: Build/Push Image and Release Charts

on:
  push:
    branches:
      - dev
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DHURL: https://console.deployhub.com
      DHUSER: ${{ secrets.DHUSER }}
      DHPASS: ${{ secrets.DHPASS }}
      DOCKERREPO: quay.io/${{ github.repository }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Set Convenience Env Vars
        id: env
        run: |
          echo "GIT_REPO_PROJECT=$(echo $GITHUB_REPOSITORY | cut -f2 -d/)" >> $GITHUB_ENV
          echo "CHART_VERSION=v10.0.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
          echo "IMAGE_VERSION=v10.0.${GITHUB_RUN_NUMBER}-g$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "IMAGE_TAG=${BRANCH_NAME}-v10.0.${GITHUB_RUN_NUMBER}-g$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "REGISTRY=$(echo ${{ env.DOCKERREPO }} | cut -f1 -d/)" >> $GITHUB_ENV

      - name: Configure Git
        id: git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Login to Quay
        id: login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERID }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and Push Docker Image
        id: build
        uses: docker/build-push-action@v3
        with:
          push: true
          username: ${{ secrets.QUAY_USERID }}
          password: ${{ secrets.QUAY_PASSWORD }}
          tags: ${{ env.DOCKERREPO }}:${{ env.IMAGE_TAG }}

      - name: Update Values and Chart
        id: chart
        run: |
            sudo go install github.com/mikefarah/yq/v4@latest
            yq e '.image.repository |= "${{ env.DOCKERREPO }}"' -i chart/${{ env.GIT_REPO_PROJECT }}/values.yaml
            yq e '.image.tag |= "${{ env.IMAGE_TAG }}"' -i chart/${{ env.GIT_REPO_PROJECT }}/values.yaml
            yq e '.image.sha |= "${{ steps.build.outputs.digest }}"' -i chart/${{ env.GIT_REPO_PROJECT }}/values.yaml
            yq e '.version |= "${{ env.CHART_VERSION }}"' -i chart/${{ env.GIT_REPO_PROJECT }}/Chart.yaml
            yq e '.appVersion |= "${{ env.CHART_VERSION }}"' -i chart/${{ env.GIT_REPO_PROJECT }}/Chart.yaml
            echo "DIGEST=${{ steps.build.outputs.digest }}" >> $GITHUB_ENV
            cat chart/${{ env.GIT_REPO_PROJECT }}/Chart.yaml

      - name: Update Compnent 
        id: updatecomp
        run: |
          pip install ortelius-cli
          dh updatecomp --rsp component.toml

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.1
        with:
          charts_dir: chart
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
